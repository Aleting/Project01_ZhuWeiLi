<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.qut.dao.SupplierMapper">
  <resultMap id="BaseResultMap" type="cn.edu.qut.entity.Supplier">
    <id column="supplier_id" jdbcType="INTEGER" property="supplierId" />
    <result column="supplier_name" jdbcType="VARCHAR" property="supplierName" />
    <result column="supplier_contacts" jdbcType="VARCHAR" property="supplierContacts" />
    <result column="supplier_wx" jdbcType="VARCHAR" property="supplierWx" />
    <result column="supplier_epay" jdbcType="VARCHAR" property="supplierEpay" />
    <result column="supplier_phone" jdbcType="VARCHAR" property="supplierPhone" />
    <result column="store_id" jdbcType="INTEGER" property="storeId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.edu.qut.entity.Supplier">
    <result column="supplier_memo" jdbcType="LONGVARCHAR" property="supplierMemo" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    supplier_id, supplier_name, supplier_contacts, supplier_wx, supplier_epay, supplier_phone, 
    store_id
  </sql>
  <sql id="Blob_Column_List">
    supplier_memo
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.edu.qut.entity.SupplierExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from supplier
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.edu.qut.entity.SupplierExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from supplier
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from supplier
    where supplier_id = #{supplierId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from supplier
    where supplier_id = #{supplierId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.qut.entity.SupplierExample">
    delete from supplier
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.qut.entity.Supplier">
    insert into supplier (supplier_id, supplier_name, supplier_contacts, 
      supplier_wx, supplier_epay, supplier_phone, 
      store_id, supplier_memo)
    values (#{supplierId,jdbcType=INTEGER}, #{supplierName,jdbcType=VARCHAR}, #{supplierContacts,jdbcType=VARCHAR}, 
      #{supplierWx,jdbcType=VARCHAR}, #{supplierEpay,jdbcType=VARCHAR}, #{supplierPhone,jdbcType=VARCHAR}, 
      #{storeId,jdbcType=INTEGER}, #{supplierMemo,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.qut.entity.Supplier">
    insert into supplier
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="supplierId != null">
        supplier_id,
      </if>
      <if test="supplierName != null">
        supplier_name,
      </if>
      <if test="supplierContacts != null">
        supplier_contacts,
      </if>
      <if test="supplierWx != null">
        supplier_wx,
      </if>
      <if test="supplierEpay != null">
        supplier_epay,
      </if>
      <if test="supplierPhone != null">
        supplier_phone,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="supplierMemo != null">
        supplier_memo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="supplierId != null">
        #{supplierId,jdbcType=INTEGER},
      </if>
      <if test="supplierName != null">
        #{supplierName,jdbcType=VARCHAR},
      </if>
      <if test="supplierContacts != null">
        #{supplierContacts,jdbcType=VARCHAR},
      </if>
      <if test="supplierWx != null">
        #{supplierWx,jdbcType=VARCHAR},
      </if>
      <if test="supplierEpay != null">
        #{supplierEpay,jdbcType=VARCHAR},
      </if>
      <if test="supplierPhone != null">
        #{supplierPhone,jdbcType=VARCHAR},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="supplierMemo != null">
        #{supplierMemo,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.qut.entity.SupplierExample" resultType="java.lang.Long">
    select count(*) from supplier
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update supplier
    <set>
      <if test="record.supplierId != null">
        supplier_id = #{record.supplierId,jdbcType=INTEGER},
      </if>
      <if test="record.supplierName != null">
        supplier_name = #{record.supplierName,jdbcType=VARCHAR},
      </if>
      <if test="record.supplierContacts != null">
        supplier_contacts = #{record.supplierContacts,jdbcType=VARCHAR},
      </if>
      <if test="record.supplierWx != null">
        supplier_wx = #{record.supplierWx,jdbcType=VARCHAR},
      </if>
      <if test="record.supplierEpay != null">
        supplier_epay = #{record.supplierEpay,jdbcType=VARCHAR},
      </if>
      <if test="record.supplierPhone != null">
        supplier_phone = #{record.supplierPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.storeId != null">
        store_id = #{record.storeId,jdbcType=INTEGER},
      </if>
      <if test="record.supplierMemo != null">
        supplier_memo = #{record.supplierMemo,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update supplier
    set supplier_id = #{record.supplierId,jdbcType=INTEGER},
      supplier_name = #{record.supplierName,jdbcType=VARCHAR},
      supplier_contacts = #{record.supplierContacts,jdbcType=VARCHAR},
      supplier_wx = #{record.supplierWx,jdbcType=VARCHAR},
      supplier_epay = #{record.supplierEpay,jdbcType=VARCHAR},
      supplier_phone = #{record.supplierPhone,jdbcType=VARCHAR},
      store_id = #{record.storeId,jdbcType=INTEGER},
      supplier_memo = #{record.supplierMemo,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update supplier
    set supplier_id = #{record.supplierId,jdbcType=INTEGER},
      supplier_name = #{record.supplierName,jdbcType=VARCHAR},
      supplier_contacts = #{record.supplierContacts,jdbcType=VARCHAR},
      supplier_wx = #{record.supplierWx,jdbcType=VARCHAR},
      supplier_epay = #{record.supplierEpay,jdbcType=VARCHAR},
      supplier_phone = #{record.supplierPhone,jdbcType=VARCHAR},
      store_id = #{record.storeId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.qut.entity.Supplier">
    update supplier
    <set>
      <if test="supplierName != null">
        supplier_name = #{supplierName,jdbcType=VARCHAR},
      </if>
      <if test="supplierContacts != null">
        supplier_contacts = #{supplierContacts,jdbcType=VARCHAR},
      </if>
      <if test="supplierWx != null">
        supplier_wx = #{supplierWx,jdbcType=VARCHAR},
      </if>
      <if test="supplierEpay != null">
        supplier_epay = #{supplierEpay,jdbcType=VARCHAR},
      </if>
      <if test="supplierPhone != null">
        supplier_phone = #{supplierPhone,jdbcType=VARCHAR},
      </if>
      <if test="storeId != null">
        store_id = #{storeId,jdbcType=INTEGER},
      </if>
      <if test="supplierMemo != null">
        supplier_memo = #{supplierMemo,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where supplier_id = #{supplierId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.edu.qut.entity.Supplier">
    update supplier
    set supplier_name = #{supplierName,jdbcType=VARCHAR},
      supplier_contacts = #{supplierContacts,jdbcType=VARCHAR},
      supplier_wx = #{supplierWx,jdbcType=VARCHAR},
      supplier_epay = #{supplierEpay,jdbcType=VARCHAR},
      supplier_phone = #{supplierPhone,jdbcType=VARCHAR},
      store_id = #{storeId,jdbcType=INTEGER},
      supplier_memo = #{supplierMemo,jdbcType=LONGVARCHAR}
    where supplier_id = #{supplierId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.qut.entity.Supplier">
    update supplier
    set supplier_name = #{supplierName,jdbcType=VARCHAR},
      supplier_contacts = #{supplierContacts,jdbcType=VARCHAR},
      supplier_wx = #{supplierWx,jdbcType=VARCHAR},
      supplier_epay = #{supplierEpay,jdbcType=VARCHAR},
      supplier_phone = #{supplierPhone,jdbcType=VARCHAR},
      store_id = #{storeId,jdbcType=INTEGER}
    where supplier_id = #{supplierId,jdbcType=INTEGER}
  </update>

  <select id="count" resultType="int" parameterType="cn.edu.qut.entity.Supplier">
      select count(*) from supplier where store_id = #{storeId};
 </select>

  <select id="query1" resultType="Supplier" parameterType="cn.edu.qut.entity.Supplier">
  select * from supplier where store_id = #{storeId};
    </select>
</mapper>