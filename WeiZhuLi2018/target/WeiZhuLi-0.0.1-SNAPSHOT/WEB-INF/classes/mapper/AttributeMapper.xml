<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.qut.dao.AttributeMapper">
  <resultMap id="BaseResultMap" type="cn.edu.qut.entity.Attribute">
    <id column="attribute_id" jdbcType="INTEGER" property="attributeId" />
    <result column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="attribute_name" jdbcType="VARCHAR" property="attributeName" />
    <result column="attribute_price0" jdbcType="DECIMAL" property="attributePrice0" />
    <result column="attribute_price" jdbcType="DECIMAL" property="attributePrice" />
    <result column="attribute_price_agent" jdbcType="DECIMAL" property="attributePriceAgent" />
    <result column="attribute_price_vip" jdbcType="DECIMAL" property="attributePriceVip" />
    <result column="attribute_repertory" jdbcType="INTEGER" property="attributeRepertory" />
    <result column="attribute_size" jdbcType="VARCHAR" property="attributeSize" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.edu.qut.entity.Attribute">
    <result column="attribute_memo" jdbcType="LONGVARCHAR" property="attributeMemo" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    attribute_id, goods_id, attribute_name, attribute_price0, attribute_price, attribute_price_agent, 
    attribute_price_vip, attribute_repertory, attribute_size
  </sql>
  <sql id="Blob_Column_List">
    attribute_memo
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.edu.qut.entity.AttributeExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from attribute
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.edu.qut.entity.AttributeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from attribute
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from attribute
    where attribute_id = #{attributeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from attribute
    where attribute_id = #{attributeId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.qut.entity.AttributeExample">
    delete from attribute
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.qut.entity.Attribute">
    insert into attribute (attribute_id, goods_id, attribute_name, 
      attribute_price0, attribute_price, attribute_price_agent, 
      attribute_price_vip, attribute_repertory, 
      attribute_size, attribute_memo)
    values (#{attributeId,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER}, #{attributeName,jdbcType=VARCHAR}, 
      #{attributePrice0,jdbcType=DECIMAL}, #{attributePrice,jdbcType=DECIMAL}, #{attributePriceAgent,jdbcType=DECIMAL}, 
      #{attributePriceVip,jdbcType=DECIMAL}, #{attributeRepertory,jdbcType=INTEGER}, 
      #{attributeSize,jdbcType=VARCHAR}, #{attributeMemo,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.qut.entity.Attribute">
    insert into attribute
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="attributeId != null">
        attribute_id,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="attributeName != null">
        attribute_name,
      </if>
      <if test="attributePrice0 != null">
        attribute_price0,
      </if>
      <if test="attributePrice != null">
        attribute_price,
      </if>
      <if test="attributePriceAgent != null">
        attribute_price_agent,
      </if>
      <if test="attributePriceVip != null">
        attribute_price_vip,
      </if>
      <if test="attributeRepertory != null">
        attribute_repertory,
      </if>
      <if test="attributeSize != null">
        attribute_size,
      </if>
      <if test="attributeMemo != null">
        attribute_memo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="attributeId != null">
        #{attributeId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="attributeName != null">
        #{attributeName,jdbcType=VARCHAR},
      </if>
      <if test="attributePrice0 != null">
        #{attributePrice0,jdbcType=DECIMAL},
      </if>
      <if test="attributePrice != null">
        #{attributePrice,jdbcType=DECIMAL},
      </if>
      <if test="attributePriceAgent != null">
        #{attributePriceAgent,jdbcType=DECIMAL},
      </if>
      <if test="attributePriceVip != null">
        #{attributePriceVip,jdbcType=DECIMAL},
      </if>
      <if test="attributeRepertory != null">
        #{attributeRepertory,jdbcType=INTEGER},
      </if>
      <if test="attributeSize != null">
        #{attributeSize,jdbcType=VARCHAR},
      </if>
      <if test="attributeMemo != null">
        #{attributeMemo,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.qut.entity.AttributeExample" resultType="java.lang.Long">
    select count(*) from attribute
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update attribute
    <set>
      <if test="record.attributeId != null">
        attribute_id = #{record.attributeId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsId != null">
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.attributeName != null">
        attribute_name = #{record.attributeName,jdbcType=VARCHAR},
      </if>
      <if test="record.attributePrice0 != null">
        attribute_price0 = #{record.attributePrice0,jdbcType=DECIMAL},
      </if>
      <if test="record.attributePrice != null">
        attribute_price = #{record.attributePrice,jdbcType=DECIMAL},
      </if>
      <if test="record.attributePriceAgent != null">
        attribute_price_agent = #{record.attributePriceAgent,jdbcType=DECIMAL},
      </if>
      <if test="record.attributePriceVip != null">
        attribute_price_vip = #{record.attributePriceVip,jdbcType=DECIMAL},
      </if>
      <if test="record.attributeRepertory != null">
        attribute_repertory = #{record.attributeRepertory,jdbcType=INTEGER},
      </if>
      <if test="record.attributeSize != null">
        attribute_size = #{record.attributeSize,jdbcType=VARCHAR},
      </if>
      <if test="record.attributeMemo != null">
        attribute_memo = #{record.attributeMemo,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update attribute
    set attribute_id = #{record.attributeId,jdbcType=INTEGER},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      attribute_name = #{record.attributeName,jdbcType=VARCHAR},
      attribute_price0 = #{record.attributePrice0,jdbcType=DECIMAL},
      attribute_price = #{record.attributePrice,jdbcType=DECIMAL},
      attribute_price_agent = #{record.attributePriceAgent,jdbcType=DECIMAL},
      attribute_price_vip = #{record.attributePriceVip,jdbcType=DECIMAL},
      attribute_repertory = #{record.attributeRepertory,jdbcType=INTEGER},
      attribute_size = #{record.attributeSize,jdbcType=VARCHAR},
      attribute_memo = #{record.attributeMemo,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update attribute
    set attribute_id = #{record.attributeId,jdbcType=INTEGER},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      attribute_name = #{record.attributeName,jdbcType=VARCHAR},
      attribute_price0 = #{record.attributePrice0,jdbcType=DECIMAL},
      attribute_price = #{record.attributePrice,jdbcType=DECIMAL},
      attribute_price_agent = #{record.attributePriceAgent,jdbcType=DECIMAL},
      attribute_price_vip = #{record.attributePriceVip,jdbcType=DECIMAL},
      attribute_repertory = #{record.attributeRepertory,jdbcType=INTEGER},
      attribute_size = #{record.attributeSize,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.qut.entity.Attribute">
    update attribute
    <set>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="attributeName != null">
        attribute_name = #{attributeName,jdbcType=VARCHAR},
      </if>
      <if test="attributePrice0 != null">
        attribute_price0 = #{attributePrice0,jdbcType=DECIMAL},
      </if>
      <if test="attributePrice != null">
        attribute_price = #{attributePrice,jdbcType=DECIMAL},
      </if>
      <if test="attributePriceAgent != null">
        attribute_price_agent = #{attributePriceAgent,jdbcType=DECIMAL},
      </if>
      <if test="attributePriceVip != null">
        attribute_price_vip = #{attributePriceVip,jdbcType=DECIMAL},
      </if>
      <if test="attributeRepertory != null">
        attribute_repertory = #{attributeRepertory,jdbcType=INTEGER},
      </if>
      <if test="attributeSize != null">
        attribute_size = #{attributeSize,jdbcType=VARCHAR},
      </if>
      <if test="attributeMemo != null">
        attribute_memo = #{attributeMemo,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where attribute_id = #{attributeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.edu.qut.entity.Attribute">
    update attribute
    set goods_id = #{goodsId,jdbcType=INTEGER},
      attribute_name = #{attributeName,jdbcType=VARCHAR},
      attribute_price0 = #{attributePrice0,jdbcType=DECIMAL},
      attribute_price = #{attributePrice,jdbcType=DECIMAL},
      attribute_price_agent = #{attributePriceAgent,jdbcType=DECIMAL},
      attribute_price_vip = #{attributePriceVip,jdbcType=DECIMAL},
      attribute_repertory = #{attributeRepertory,jdbcType=INTEGER},
      attribute_size = #{attributeSize,jdbcType=VARCHAR},
      attribute_memo = #{attributeMemo,jdbcType=LONGVARCHAR}
    where attribute_id = #{attributeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.qut.entity.Attribute">
    update attribute
    set goods_id = #{goodsId,jdbcType=INTEGER},
      attribute_name = #{attributeName,jdbcType=VARCHAR},
      attribute_price0 = #{attributePrice0,jdbcType=DECIMAL},
      attribute_price = #{attributePrice,jdbcType=DECIMAL},
      attribute_price_agent = #{attributePriceAgent,jdbcType=DECIMAL},
      attribute_price_vip = #{attributePriceVip,jdbcType=DECIMAL},
      attribute_repertory = #{attributeRepertory,jdbcType=INTEGER},
      attribute_size = #{attributeSize,jdbcType=VARCHAR}
    where attribute_id = #{attributeId,jdbcType=INTEGER}
  </update>
</mapper>