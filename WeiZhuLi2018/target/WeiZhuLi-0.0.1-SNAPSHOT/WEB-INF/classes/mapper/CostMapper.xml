<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.qut.dao.CostMapper">
  <resultMap id="BaseResultMap" type="cn.edu.qut.entity.Cost">
    <id column="cost_id" jdbcType="INTEGER" property="costId" />
    <result column="store_id" jdbcType="INTEGER" property="storeId" />
    <result column="renewal_date" jdbcType="TIMESTAMP" property="renewalDate" />
    <result column="payment" jdbcType="VARCHAR" property="payment" />
    <result column="money" jdbcType="INTEGER" property="money" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    cost_id, store_id, renewal_date, payment, money
  </sql>
  <select id="selectByExample" parameterType="cn.edu.qut.entity.CostExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cost
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from cost
    where cost_id = #{costId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from cost
    where cost_id = #{costId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.qut.entity.CostExample">
    delete from cost
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.qut.entity.Cost">
    insert into cost (cost_id, store_id, renewal_date, 
      payment, money)
    values (#{costId,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER}, #{renewalDate,jdbcType=TIMESTAMP}, 
      #{payment,jdbcType=VARCHAR}, #{money,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.qut.entity.Cost">
    insert into cost
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="costId != null">
        cost_id,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="renewalDate != null">
        renewal_date,
      </if>
      <if test="payment != null">
        payment,
      </if>
      <if test="money != null">
        money,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="costId != null">
        #{costId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="renewalDate != null">
        #{renewalDate,jdbcType=TIMESTAMP},
      </if>
      <if test="payment != null">
        #{payment,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        #{money,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.qut.entity.CostExample" resultType="java.lang.Long">
    select count(*) from cost
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update cost
    <set>
      <if test="record.costId != null">
        cost_id = #{record.costId,jdbcType=INTEGER},
      </if>
      <if test="record.storeId != null">
        store_id = #{record.storeId,jdbcType=INTEGER},
      </if>
      <if test="record.renewalDate != null">
        renewal_date = #{record.renewalDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payment != null">
        payment = #{record.payment,jdbcType=VARCHAR},
      </if>
      <if test="record.money != null">
        money = #{record.money,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update cost
    set cost_id = #{record.costId,jdbcType=INTEGER},
      store_id = #{record.storeId,jdbcType=INTEGER},
      renewal_date = #{record.renewalDate,jdbcType=TIMESTAMP},
      payment = #{record.payment,jdbcType=VARCHAR},
      money = #{record.money,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.qut.entity.Cost">
    update cost
    <set>
      <if test="storeId != null">
        store_id = #{storeId,jdbcType=INTEGER},
      </if>
      <if test="renewalDate != null">
        renewal_date = #{renewalDate,jdbcType=TIMESTAMP},
      </if>
      <if test="payment != null">
        payment = #{payment,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=INTEGER},
      </if>
    </set>
    where cost_id = #{costId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.qut.entity.Cost">
    update cost
    set store_id = #{storeId,jdbcType=INTEGER},
      renewal_date = #{renewalDate,jdbcType=TIMESTAMP},
      payment = #{payment,jdbcType=VARCHAR},
      money = #{money,jdbcType=INTEGER}
    where cost_id = #{costId,jdbcType=INTEGER}
  </update>
</mapper>