<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.qut.dao.SellerMapper">
  <resultMap id="BaseResultMap" type="cn.edu.qut.entity.Seller">
    <id column="seller_id" jdbcType="INTEGER" property="sellerId" />
    <result column="seller_login_name" jdbcType="VARCHAR" property="sellerLoginName" />
    <result column="seller_password" jdbcType="VARCHAR" property="sellerPassword" />
    <result column="seller_state" jdbcType="VARCHAR" property="sellerState" />
    <result column="seller_real_name" jdbcType="VARCHAR" property="sellerRealName" />
    <result column="seller_img" jdbcType="VARCHAR" property="sellerImg" />
    <result column="seller_phone" jdbcType="VARCHAR" property="sellerPhone" />
    <result column="seller_mailbox" jdbcType="VARCHAR" property="sellerMailbox" />
    <result column="seller_epay" jdbcType="VARCHAR" property="sellerEpay" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="seller_reg_date" jdbcType="DATE" property="sellerRegDate" />
    <result column="store_id" jdbcType="INTEGER" property="storeId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    seller_id, seller_login_name, seller_password, seller_state, seller_real_name, seller_img, 
    seller_phone, seller_mailbox, seller_epay, role_id, seller_reg_date, store_id
  </sql>
  <select id="selectByExample" parameterType="cn.edu.qut.entity.SellerExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from seller
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from seller
    where seller_id = #{sellerId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from seller
    where seller_id = #{sellerId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.qut.entity.SellerExample">
    delete from seller
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.qut.entity.Seller">
    insert into seller (seller_id, seller_login_name, seller_password, 
      seller_state, seller_real_name, seller_img, 
      seller_phone, seller_mailbox, seller_epay, 
      role_id, seller_reg_date, store_id
      )
    values (#{sellerId,jdbcType=INTEGER}, #{sellerLoginName,jdbcType=VARCHAR}, #{sellerPassword,jdbcType=VARCHAR}, 
      #{sellerState,jdbcType=VARCHAR}, #{sellerRealName,jdbcType=VARCHAR}, #{sellerImg,jdbcType=VARCHAR}, 
      #{sellerPhone,jdbcType=VARCHAR}, #{sellerMailbox,jdbcType=VARCHAR}, #{sellerEpay,jdbcType=VARCHAR}, 
      #{roleId,jdbcType=INTEGER}, #{sellerRegDate,jdbcType=DATE}, #{storeId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.qut.entity.Seller">
    insert into seller
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sellerId != null">
        seller_id,
      </if>
      <if test="sellerLoginName != null">
        seller_login_name,
      </if>
      <if test="sellerPassword != null">
        seller_password,
      </if>
      <if test="sellerState != null">
        seller_state,
      </if>
      <if test="sellerRealName != null">
        seller_real_name,
      </if>
      <if test="sellerImg != null">
        seller_img,
      </if>
      <if test="sellerPhone != null">
        seller_phone,
      </if>
      <if test="sellerMailbox != null">
        seller_mailbox,
      </if>
      <if test="sellerEpay != null">
        seller_epay,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="sellerRegDate != null">
        seller_reg_date,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sellerId != null">
        #{sellerId,jdbcType=INTEGER},
      </if>
      <if test="sellerLoginName != null">
        #{sellerLoginName,jdbcType=VARCHAR},
      </if>
      <if test="sellerPassword != null">
        #{sellerPassword,jdbcType=VARCHAR},
      </if>
      <if test="sellerState != null">
        #{sellerState,jdbcType=VARCHAR},
      </if>
      <if test="sellerRealName != null">
        #{sellerRealName,jdbcType=VARCHAR},
      </if>
      <if test="sellerImg != null">
        #{sellerImg,jdbcType=VARCHAR},
      </if>
      <if test="sellerPhone != null">
        #{sellerPhone,jdbcType=VARCHAR},
      </if>
      <if test="sellerMailbox != null">
        #{sellerMailbox,jdbcType=VARCHAR},
      </if>
      <if test="sellerEpay != null">
        #{sellerEpay,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="sellerRegDate != null">
        #{sellerRegDate,jdbcType=DATE},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.qut.entity.SellerExample" resultType="java.lang.Long">
    select count(*) from seller
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update seller
    <set>
      <if test="record.sellerId != null">
        seller_id = #{record.sellerId,jdbcType=INTEGER},
      </if>
      <if test="record.sellerLoginName != null">
        seller_login_name = #{record.sellerLoginName,jdbcType=VARCHAR},
      </if>
      <if test="record.sellerPassword != null">
        seller_password = #{record.sellerPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.sellerState != null">
        seller_state = #{record.sellerState,jdbcType=VARCHAR},
      </if>
      <if test="record.sellerRealName != null">
        seller_real_name = #{record.sellerRealName,jdbcType=VARCHAR},
      </if>
      <if test="record.sellerImg != null">
        seller_img = #{record.sellerImg,jdbcType=VARCHAR},
      </if>
      <if test="record.sellerPhone != null">
        seller_phone = #{record.sellerPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.sellerMailbox != null">
        seller_mailbox = #{record.sellerMailbox,jdbcType=VARCHAR},
      </if>
      <if test="record.sellerEpay != null">
        seller_epay = #{record.sellerEpay,jdbcType=VARCHAR},
      </if>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=INTEGER},
      </if>
      <if test="record.sellerRegDate != null">
        seller_reg_date = #{record.sellerRegDate,jdbcType=DATE},
      </if>
      <if test="record.storeId != null">
        store_id = #{record.storeId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update seller
    set seller_id = #{record.sellerId,jdbcType=INTEGER},
      seller_login_name = #{record.sellerLoginName,jdbcType=VARCHAR},
      seller_password = #{record.sellerPassword,jdbcType=VARCHAR},
      seller_state = #{record.sellerState,jdbcType=VARCHAR},
      seller_real_name = #{record.sellerRealName,jdbcType=VARCHAR},
      seller_img = #{record.sellerImg,jdbcType=VARCHAR},
      seller_phone = #{record.sellerPhone,jdbcType=VARCHAR},
      seller_mailbox = #{record.sellerMailbox,jdbcType=VARCHAR},
      seller_epay = #{record.sellerEpay,jdbcType=VARCHAR},
      role_id = #{record.roleId,jdbcType=INTEGER},
      seller_reg_date = #{record.sellerRegDate,jdbcType=DATE},
      store_id = #{record.storeId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.qut.entity.Seller">
    update seller
    <set>
      <if test="sellerLoginName != null">
        seller_login_name = #{sellerLoginName,jdbcType=VARCHAR},
      </if>
      <if test="sellerPassword != null">
        seller_password = #{sellerPassword,jdbcType=VARCHAR},
      </if>
      <if test="sellerState != null">
        seller_state = #{sellerState,jdbcType=VARCHAR},
      </if>
      <if test="sellerRealName != null">
        seller_real_name = #{sellerRealName,jdbcType=VARCHAR},
      </if>
      <if test="sellerImg != null">
        seller_img = #{sellerImg,jdbcType=VARCHAR},
      </if>
      <if test="sellerPhone != null">
        seller_phone = #{sellerPhone,jdbcType=VARCHAR},
      </if>
      <if test="sellerMailbox != null">
        seller_mailbox = #{sellerMailbox,jdbcType=VARCHAR},
      </if>
      <if test="sellerEpay != null">
        seller_epay = #{sellerEpay,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="sellerRegDate != null">
        seller_reg_date = #{sellerRegDate,jdbcType=DATE},
      </if>
      <if test="storeId != null">
        store_id = #{storeId,jdbcType=INTEGER},
      </if>
    </set>
    where seller_id = #{sellerId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.qut.entity.Seller">
    update seller
    set seller_login_name = #{sellerLoginName,jdbcType=VARCHAR},
      seller_password = #{sellerPassword,jdbcType=VARCHAR},
      seller_state = #{sellerState,jdbcType=VARCHAR},
      seller_real_name = #{sellerRealName,jdbcType=VARCHAR},
      seller_img = #{sellerImg,jdbcType=VARCHAR},
      seller_phone = #{sellerPhone,jdbcType=VARCHAR},
      seller_mailbox = #{sellerMailbox,jdbcType=VARCHAR},
      seller_epay = #{sellerEpay,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=INTEGER},
      seller_reg_date = #{sellerRegDate,jdbcType=DATE},
      store_id = #{storeId,jdbcType=INTEGER}
    where seller_id = #{sellerId,jdbcType=INTEGER}
  </update>
  <update id="updateState" parameterType="cn.edu.qut.entity.Seller">
		update seller set seller_state = 1 where seller_state = #{sellerState};
	</update>
  <select id="selectCount" resultType="int" parameterType="cn.edu.qut.entity.Seller">
    select count(*) from seller where store_id=#{storeId};
  </select>

  <select id="findAllPage" parameterType="cn.edu.qut.entity.Seller" resultType="Seller">
  select * from seller where store_id= #{storeId} limit #{page},5;
  </select>
  <select id="selectId" parameterType="cn.edu.qut.entity.Seller" resultType="Seller">
  select * from seller where store_id= #{storeId} and seller_id = #{bouId};
 </select>
</mapper>