<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.qut.dao.T_boughtMapper">
  <resultMap id="BaseResultMap" type="cn.edu.qut.entity.T_bought">
    <id column="bou_id" jdbcType="INTEGER" property="bouId" />
    <id column="store_id" jdbcType="INTEGER" property="storeId" />
    <result column="seller_id" jdbcType="INTEGER" property="sellerId" />
    <result column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="go_spec" jdbcType="VARCHAR" property="goSpec" />
    <result column="go_ex_number" jdbcType="INTEGER" property="goExNumber" />
    <result column="supp_id" jdbcType="VARCHAR" property="suppId" />
    <result column="bou_date" jdbcType="DATE" property="bouDate" />
    <result column="sum_price" jdbcType="DECIMAL" property="sumPrice" />
    <result column="available_flag" jdbcType="VARCHAR" property="availableFlag" />
    <result column="bou_memo" jdbcType="VARCHAR" property="bouMemo" />
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
    <result column="goods_num" jdbcType="VARCHAR" property="goodsNum" />
    <result column="attribute_price" jdbcType="VARCHAR" property="attributePrice" />
    <result column="supplier_name" jdbcType="VARCHAR" property="supplierName" />
    <result column="supplier_id" jdbcType="INTEGER" property="supplierId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    bou_id, store_id, seller_id, goods_id, go_spec, go_ex_number, supp_id, bou_date, 
    sum_price, available_flag, bou_memo
  </sql>
  <select id="selectByExample" parameterType="cn.edu.qut.entity.T_boughtExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_bought
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="cn.edu.qut.entity.T_boughtKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_bought
    where bou_id = #{bouId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="cn.edu.qut.entity.T_boughtKey">
    delete from t_bought
    where bou_id = #{bouId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.qut.entity.T_boughtExample">
    delete from t_bought
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.qut.entity.T_bought">
    insert into t_bought (bou_id, store_id, seller_id, 
      goods_id, go_spec, go_ex_number, 
      supp_id, bou_date, sum_price, 
      available_flag, bou_memo)
    values (#{bouId,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER}, #{sellerId,jdbcType=INTEGER}, 
      #{goodsId,jdbcType=INTEGER}, #{goSpec,jdbcType=VARCHAR}, #{goExNumber,jdbcType=INTEGER}, 
      #{suppId,jdbcType=VARCHAR}, #{bouDate,jdbcType=DATE}, #{sumPrice,jdbcType=DECIMAL}, 
      #{availableFlag,jdbcType=VARCHAR}, #{bouMemo,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.qut.entity.T_bought">
    insert into t_bought
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bouId != null">
        bou_id,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="sellerId != null">
        seller_id,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="goSpec != null">
        go_spec,
      </if>
      <if test="goExNumber != null">
        go_ex_number,
      </if>
      <if test="suppId != null">
        supp_id,
      </if>
      <if test="bouDate != null">
        bou_date,
      </if>
      <if test="sumPrice != null">
        sum_price,
      </if>
      <if test="availableFlag != null">
        available_flag,
      </if>
      <if test="bouMemo != null">
        bou_memo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bouId != null">
        #{bouId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="sellerId != null">
        #{sellerId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="goSpec != null">
        #{goSpec,jdbcType=VARCHAR},
      </if>
      <if test="goExNumber != null">
        #{goExNumber,jdbcType=INTEGER},
      </if>
      <if test="suppId != null">
        #{suppId,jdbcType=VARCHAR},
      </if>
      <if test="bouDate != null">
        #{bouDate,jdbcType=DATE},
      </if>
      <if test="sumPrice != null">
        #{sumPrice,jdbcType=DECIMAL},
      </if>
      <if test="availableFlag != null">
        #{availableFlag,jdbcType=VARCHAR},
      </if>
      <if test="bouMemo != null">
        #{bouMemo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.qut.entity.T_boughtExample" resultType="java.lang.Long">
    select count(*) from t_bought
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_bought
    <set>
      <if test="record.bouId != null">
        bou_id = #{record.bouId,jdbcType=INTEGER},
      </if>
      <if test="record.storeId != null">
        store_id = #{record.storeId,jdbcType=INTEGER},
      </if>
      <if test="record.sellerId != null">
        seller_id = #{record.sellerId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsId != null">
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.goSpec != null">
        go_spec = #{record.goSpec,jdbcType=VARCHAR},
      </if>
      <if test="record.goExNumber != null">
        go_ex_number = #{record.goExNumber,jdbcType=INTEGER},
      </if>
      <if test="record.suppId != null">
        supp_id = #{record.suppId,jdbcType=VARCHAR},
      </if>
      <if test="record.bouDate != null">
        bou_date = #{record.bouDate,jdbcType=DATE},
      </if>
      <if test="record.sumPrice != null">
        sum_price = #{record.sumPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.availableFlag != null">
        available_flag = #{record.availableFlag,jdbcType=VARCHAR},
      </if>
      <if test="record.bouMemo != null">
        bou_memo = #{record.bouMemo,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_bought
    set bou_id = #{record.bouId,jdbcType=INTEGER},
      store_id = #{record.storeId,jdbcType=INTEGER},
      seller_id = #{record.sellerId,jdbcType=INTEGER},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      go_spec = #{record.goSpec,jdbcType=VARCHAR},
      go_ex_number = #{record.goExNumber,jdbcType=INTEGER},
      supp_id = #{record.suppId,jdbcType=VARCHAR},
      bou_date = #{record.bouDate,jdbcType=DATE},
      sum_price = #{record.sumPrice,jdbcType=DECIMAL},
      available_flag = #{record.availableFlag,jdbcType=VARCHAR},
      bou_memo = #{record.bouMemo,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.qut.entity.T_bought">
    update t_bought
    <set>
      <if test="sellerId != null">
        seller_id = #{sellerId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="goSpec != null">
        go_spec = #{goSpec,jdbcType=VARCHAR},
      </if>
      <if test="goExNumber != null">
        go_ex_number = #{goExNumber,jdbcType=INTEGER},
      </if>
      <if test="suppId != null">
        supp_id = #{suppId,jdbcType=VARCHAR},
      </if>
      <if test="bouDate != null">
        bou_date = #{bouDate,jdbcType=DATE},
      </if>
      <if test="sumPrice != null">
        sum_price = #{sumPrice,jdbcType=DECIMAL},
      </if>
      <if test="availableFlag != null">
        available_flag = #{availableFlag,jdbcType=VARCHAR},
      </if>
      <if test="bouMemo != null">
        bou_memo = #{bouMemo,jdbcType=VARCHAR},
      </if>
    </set>
    where bou_id = #{bouId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.qut.entity.T_bought">
    update t_bought
    set seller_id = #{sellerId,jdbcType=INTEGER},
      goods_id = #{goodsId,jdbcType=INTEGER},
      go_spec = #{goSpec,jdbcType=VARCHAR},
      go_ex_number = #{goExNumber,jdbcType=INTEGER},
      supp_id = #{suppId,jdbcType=VARCHAR},
      bou_date = #{bouDate,jdbcType=DATE},
      sum_price = #{sumPrice,jdbcType=DECIMAL},
      available_flag = #{availableFlag,jdbcType=VARCHAR},
      bou_memo = #{bouMemo,jdbcType=VARCHAR}
    where bou_id = #{bouId,jdbcType=INTEGER}
      and store_id = #{storeId,jdbcType=INTEGER}
  </update>
  <select id="findAllPage" parameterType="cn.edu.qut.entity.T_bought" resultType="T_bought">
  select goods_name,goods_num,attribute_size,attribute_price,supplier_name,supplier.supplier_id ,goods.store_id from goods,order_goods,attribute,supplier where goods.goods_id = order_goods.goods_id and attribute.goods_id=goods.goods_id and goods.supplier_id=supplier.supplier_id and goods.store_id=#{storeId} limit #{page},5;
  </select>

  <select id="count" resultType="int" parameterType="cn.edu.qut.entity.T_bought">
select count(*) from goods,order_goods,attribute,supplier where goods.goods_id = order_goods.goods_id and attribute.goods_id=goods.goods_id and goods.supplier_id=supplier.supplier_id and goods.store_id = #{storeId};
 </select>

  <select id="selectSupplierName" parameterType="cn.edu.qut.entity.T_bought" resultType="T_bought">
  select goods_name,goods_num,attribute_size,attribute_price,supplier_name,supplier.supplier_id ,goods.store_id from goods,order_goods,attribute,supplier where goods.goods_id = order_goods.goods_id and attribute.goods_id=goods.goods_id and goods.supplier_id=supplier.supplier_id and goods.store_id=#{storeId} and supplier.supplier_name like concat("%",concat(#{supplierName},"%"));
  </select>

  <select id="query1" parameterType="cn.edu.qut.entity.T_bought" resultType="T_bought">
  select goods_name,goods_num,attribute_size,attribute_price,supplier_name,supplier.supplier_id ,goods.store_id from goods,order_goods,attribute,supplier where goods.goods_id = order_goods.goods_id and attribute.goods_id=goods.goods_id and goods.supplier_id=supplier.supplier_id and goods.store_id=#{storeId};
  </select>
</mapper>